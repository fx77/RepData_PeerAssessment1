cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[, "Weight"]
list.files()
files <- list.files("diet_data")
files_full <- list.files("diet_data", full.names=TRUE)
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for (i in 1:5) {}
for (i in 1:5) { dat  <- rbind(dat, read.csv(files_full[i]))}
dat  <- data.frame()
for (i in 1:5) { dat  <- rbind(dat, read.csv(files_full[i]))}
str(dat)
median(dat$Weight)
median(dat$Weight, na.rm=TRUE)
mean(dat$Weight, na.rm=TRUE)
dat30 <- dat[which(dat[, "Day"] == 30),]
source("pollutantmean.R")
pollutantmean("specdata", Day)
ls
pollutantmean("specdata", Day)
pollutantmean("specdata", Day)
pollutantmean("specdata")
pollutantmean("specdata")
source("pollutantmean.R")
pollutantmean("specdata")
pollutantmean("specdata")
source("pollutantmean.R")
pollutantmean("specdata")
dat <- data.frame()
files_list <- list.files(directory, full.names=TRUE)   #creates a list of files
dat <- data.frame()                             #creates an empty data frame
for (i in 1:30) {
#loops through the files, rbinding them together
dat <- rbind(dat, read.csv(files_list[i]))
}
source("weightmedian.R")
weightmedian("diet_data",30)
weightmedian("diet_data",30)
source("weightmedian.R")
weightmedian("diet_data",30)
source("pollutantmean.R")
pollutantmean("specdata")
head(dat)
source("pollutantmean.R")
pollutantmean("specdata")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata")
pollutantmean("specdata", "nitrate")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "nitrate")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "nitrate", 4)
pollutantmean("specdata", "nitrate", 2)
pollutantmean("specdata", "nitrate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "nitrate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source("submitscript1.R")
submit()
source("complete.R")
source("complete.R")
complete("specdata",1)
complete("specdata",1)
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
complete("specdata",2)
complete("specdata",1:6)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
submit()
submit()
submit()
?cor
cor(1:10, 2:11)
source("complete.R")
source("corr.R")
complete("specdata", 30:25)
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
cv
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
corr("specdata", 200)
source("corr.R")
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
submit()
submit()
submit()
install.packages("xlsx", dependencies=TRUE)
install.packages("rJava", dependencies=TRUE)
url <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(url, destfile= "./1.csv", method = "curl")
data <- read.csv("q,csv")
data <- read.csv("1.csv")
download.file(url, destfile= "./data66.csv", method = "curl")
library(XML)
install.packages("XML", dependencies=TRUE)
library(XML)
doc <- xmlTreeParse(url, useInternal = TRUE)
doc <- xmlTreeParse(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml, useInternal = TRUE)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
doc <- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
xmlfile <- xmlTreeParse(url)
xmlfile <- xmlTreeParse("getdata-data-restaurants.xml")
xmltop <- xmlRoot(xmlfile)
head(xmltop)
head(xmlfile)
xpathSApply(xmltop, "//zipcode", xmlValue)==21231
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231)
sum(xpathSApply(xmltop, "//zipcode", xmlValue)==21231)
doc <- xmlTreeParse("getdata-data-restaurants.xml")
rootNode <- xmlRoot(doc)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231)
doc <- xmlParse("getdata-data-restaurants.xml")
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231)
doc <- xmlTreeParse("getdata-data-restaurants.xml", useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
DT <- read.csv("./data/microdata3.csv")
DT <- read.csv("./microdata3.csv")
file.info("./data/microdata3.csv")$size
file.info("./data/microdata3.csv")
file.info("./microdata3.csv")$size
file.info("./microdata3.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
head(DT)
head(DT$pwgtp15)
rowMeans(DT)[DT$SEX==1]
mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean)
q
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean)
q
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15),by=SEX]
head(DT)
DT[,mean(pwgtp15),by=SEX]
DT[,mean(pwgtp15)]
DT[,mean(DT$pwgtp15)]
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
fread()
library(data.table)
install.packages("ggplot2")
install.packages("data.table")
library(data.table)
fread()
DT <- fread("./microdata3.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(url,  destfile="./restaurants.xml", method="curl")
library(XML)
doc <- xmlTreeParse(url,useInteral=TRUE)
doc <- xmlTreeParse(url)
doc <- xmlTreeParse(url,useInteral=FALSE)
doc <- xmlTreeParse("./restaurants.xml",useInteral=TRUE)
doc <- xmlParse("./restaurants.xml")
doc
top <- xmlRoot(doc)
top
xmlName(top)
names(top)
doc <- xmlParse("./restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]][[2]]
rootNode[[1]][[1]][[3]]
xpathSApply(rootNode, "//zipcode",xmlValue)
xpathSApply(rootNode, "//zipcode",xmlValue=21231)
xpathSApply(rootNode, "//zipcode",xmlValue==21231)
x <- xpathSApply(rootNode, "//zipcode",xmlValue==21231)
x <- xpathSApply(rootNode, "//zipcode",xmlValue)
xsub <- x[which(x==21231)]
xsub
length(xsub)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url, destfile="data123.csv",method="curl")
fread("./data123.csv")
library(data.table)
fread("./data123.csv")
tables()
DT <- fread("data123.csv", sep = ",", header= TRUE)
tables()
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(
s
q
system.time()
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
cls
install.packages('ProjectTemplate')
weighted.mean(x, w)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x, w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x1 + x2 + x3, data=mydata)
fit <- lm(y ~ x)
fit
data(mtcars)
mtcars
mtcars$mpg
mtcars$weight
mtcars$wt
fit <- lm(mtcars$mpg ~ mtcars$wt)
fit
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ 0 + x)
fit
plot(y,x)
cor(x,y) *sd(y)/sd(x)
x <- c(x,x*-1)
y <- c(y,y*-1)
cor(x,y) *sd(y)/sd(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- x/sd(x)
xn
sd(x)
mean8x
mean(x)
xn <- xn-mean(x)
xn
xn <- x/var(x)
xn
xn <- xn-mean(x)
xn
mean(x)
xn <- x-mean(x)
xn <- x/sd(x)
xn
x
xn <- x-mean(x)
xn <- xn/sd(x)
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
install.packages(usingR)
install.packages(UsingR)
library(UsingR)
install.packages("UsingR")
library(UsingR)
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
# manipulate allows the user to change the variable mu to see how the mean squares changes
#   library(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
# plot the correct graph
myHist(mean(galton$child))
data(galton)
install.packages("HistData")
install.packages("HistData")
data(galton)
data("galton")
library(UsingR)
data(galton)
data(galton)
data(Galton)
hist(Galton$child)
plot(galton$parent, galton$child, pch=19, col=”blue”)
plot(galton$parent, galton$child, pch=19, col="blue")
plot(Galton$parent, Galton$child, pch=19, col="blue")
install.packages("Hmisc")
install.packages("dplyr")
install.packages("png")
install.packages("doMC")
install.packages("pandoc")
setwd("/Users/tporobic/Courses/RepData_PeerAssessment1")
getwd
getwd()
activity <- read.csv("activity.csv")
head(activity)
tail(activity)
activity$steps
sum(activity.steps, na.rm=true)
sum(activity$steps, na.rm=true)
sum(activity$steps)
sum(activity$steps, na.rm=TRUE)
activity <- read.csv("activity.csv")
activity$steps
head(activity)
tapply(activity$steps, activity$date, mean)
actmean <- tapply(activity$steps, activity$date, mean)
head(actmean)
head(actmean[,1])
head(actmean[1])
head(actmean[1,2])
mean(actmean)
mean(actmean, na.rm=TRUE)
actmean <- aggregate(activity$steps, activity$date, mean)
actmean <- aggregate(activity$steps, list(activity$date), mean)
head(actmean)
actmean <- tapply(activity$steps, activity$date, mean)
actmeanDF <- data.frame(template=names(actmean), mean=actmean)
head(actmeanDF)
actmeanDF <- data.frame(date=names(actmean), mean=actmean)
head(actmeanDF)
actmeanDF$date
actmeanDF <- data.frame(date=names(actmean), mean=actmean)
actmean <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
daily_total <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
DF <- data.frame(date=names(daily_total), sum=daily_total)
mean(DF$sum)
median(DF$sum)
library(ggplot)
median(DF$sum)
library("ggplot")
install.packages("ggplot")
install.packages(ggplot)
install.packages("ggplot2")
library("ggplot2")
ggplot(DF, aes(date, sum)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") +
w
head(activity)
activity
interval_mean <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
DF2 <- data.frame(interval=names(interval_mean), avg=interval_mean)
DF2
plot(DF2$interval, DF2$avg)
head(DF2)
DF2
plot(DF2$interval, DF2$avg, type="1")
plot(DF2$interval, DF2$avg, type="l")
plot(DF2$interval, DF2$avg, type="l")
plot(DF2$interval~DF2$avg, type="l")
plot(DF2$avg~DF2$interval, type="l")
DF2
str(intervalmean)
str(interval_mean)
intervals<- strptime(sprintf("%04d", as.numeric(names(interval_mean))), format="%H%M")
intervals
plot(intervals~interval_mean, type="l")
plot(intervals, interval_mean, type="l")
head(DF2)
plot(intervals, interval_mean, type="l")
DF2
